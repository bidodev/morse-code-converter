{"version":3,"sources":["App.js","index.js"],"names":["App","handleChange","e","plainText","target","value","setState","actualWord","decodeMorse","converter","a","b","c","d","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","_","$","output","length","charAt","toLowerCase","morseCode","state","className","htmlFor","type","id","autoComplete","onChange","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAEqBA,E,kDACnB,aAAe,IAAD,8BACZ,gBAOFC,aAAe,SAACC,GACd,IAAMC,EAAYD,EAAEE,OAAOC,MAC3B,EAAKC,SAAS,CAAEC,WAAYJ,IAC5B,EAAKK,YAAYL,IAXL,EAcdK,YAAc,SAACH,GA6Db,IA5DA,IAAMI,EAAY,CAChBC,EAAG,KACHC,EAAG,OACHC,EAAG,OACHC,EAAG,MACHX,EAAG,IACHY,EAAG,OACHC,EAAG,MACHC,EAAG,OACHC,EAAG,KACHC,EAAG,OACHC,EAAG,MACHC,EAAG,OACHC,EAAG,KACHC,EAAG,KACHC,EAAG,MACHC,EAAG,OACHC,EAAG,OACHC,EAAG,MACHC,EAAG,MACHC,EAAG,IACHC,EAAG,MACHC,EAAG,OACHC,EAAG,MACHC,EAAG,OACHC,EAAG,OACHC,EAAG,OACH,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,QACL,IAAK,QACL,IAAK,SACLC,EAAG,SACH,IAAK,SACLC,EAAG,UACH,IAAK,SACL,IAAK,KAGHC,EAAS,GAEJpB,EAAI,EAAGA,EAAIZ,EAAMiC,OAAQrB,IAChCoB,GAAU5B,EAAUJ,EAAMkC,OAAOtB,GAAGuB,eAGtC,OAAO,EAAKlC,SAAS,CAAEmC,UAAWJ,KA7ElC,EAAKK,MAAQ,CACXnC,WAAY,GACZkC,UAAW,IAJD,E,qDAmFZ,OACE,yBAAKE,UAAU,aACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,aACb,oDAEA,uBAAGA,UAAU,QAAb,uCAIJ,0BAAMA,UAAU,mBACd,yBAAKA,UAAU,cACb,2BAAOC,QAAQ,QAAQD,UAAU,0BAAjC,cAIA,yBAAKA,UAAU,aACb,2BACEE,KAAK,OACLF,UAAU,eACVG,GAAG,QACHC,aAAa,MACbC,SAAUC,KAAKhD,iBAKrB,yBAAK0C,UAAU,cACb,2BAAOA,UAAU,0BAAjB,SAEA,yBAAKA,UAAU,aACb,yBAAKG,GAAG,QAAQG,KAAKP,MAAMD,mB,GAnHRS,aCGjCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e0494141.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      actualWord: '',\n      morseCode: '',\n    };\n  }\n\n  handleChange = (e) => {\n    const plainText = e.target.value;\n    this.setState({ actualWord: plainText });\n    this.decodeMorse(plainText);\n  };\n\n  decodeMorse = (value) => {\n    const converter = {\n      a: '.-',\n      b: '-...',\n      c: '-.-.',\n      d: '-..',\n      e: '.',\n      f: '..-.',\n      g: '--.',\n      h: '....',\n      i: '..',\n      j: '.---',\n      k: '-.-',\n      l: '.-..',\n      m: '--',\n      n: '-.',\n      o: '---',\n      p: '.--.',\n      q: '--.-',\n      r: '.-.',\n      s: '...',\n      t: '-',\n      u: '..-',\n      v: '...-',\n      w: '.--',\n      x: '-..-',\n      y: '-.--',\n      z: '--..',\n      '1': '.----',\n      '2': '..---',\n      '3': '...--',\n      '4': '....-',\n      '5': '.....',\n      '6': '-....',\n      '7': '--...',\n      '8': '---..',\n      '9': '----.',\n      '0': '-----',\n      '.': '.-.-.-',\n      ',': '--..--',\n      '?': '..--..',\n      \"'\": '.----.',\n      '!': '-.-.--',\n      '/': '-..-.',\n      '(': '-.--.',\n      ')': '-.--.-',\n      '&': '.-...',\n      ':': '---...',\n      ';': '-.-.-.',\n      '=': '-...-',\n      '+': '.-.-.',\n      '-': '-....-',\n      _: '..--.-',\n      '\"': '.-..-.',\n      $: '...-..-',\n      '@': '.--.-.',\n      ' ': ' ',\n    };\n\n    let output = '';\n\n    for (let i = 0; i < value.length; i++) {\n      output += converter[value.charAt(i).toLowerCase()];\n    }\n\n    return this.setState({ morseCode: output });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row page-header\">\n          <div className=\"col-xs-12\">\n            <h1>Morse Code Converter</h1>\n\n            <p className=\"lead\">Live-convert text to morse code. </p>\n          </div>\n        </div>\n\n        <form className=\"form-horizontal\">\n          <div className=\"form-group\">\n            <label htmlFor=\"morse\" className=\"control-label col-xs-1\">\n              Plain Text\n            </label>\n\n            <div className=\"col-xs-11\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"morse\"\n                autoComplete=\"off\"\n                onChange={this.handleChange}\n              ></input>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label className=\"control-label col-xs-1\">Morse</label>\n\n            <div className=\"col-xs-11\">\n              <pre id=\"text\">{this.state.morseCode}</pre>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}